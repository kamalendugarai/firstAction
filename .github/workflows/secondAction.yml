name: Second Action
on:
  push:
    branches:
      - '!main'

  workflow_dispatch: null

jobs:
  SetAllUp:
    runs-on: ubuntu-22.04
    permissions:
      actions: write
      attestations: read
      checks: read
      contents: write

    steps:
      - name: Install Node Js from .nvmrc
        uses: actions/setup-node@v4.1.0
        with:
          node-version-file: .nvmrc
          architecture: x64

      - name: Check Node and NPM Version
        run: |
          echo "Node - $(node -v)"
          echo "NPM - $(npm -v)"

      - name: Checkout to the Repository
        uses: actions/checkout@v4.2.2
        with:
          # Fetch all history for all tags and branches
          fetch-depth: 0

      - name: Install Dependencies
        run: npm ci

      - name: Run  Playwright tests
        run: npx playwright test

      - name: Check for Pull Request ["pull_request within commit message"]
        id: 'checkPullRequest'
        shell: bash
        run: |
          git log --pretty=format:%s -1 --abbrev-commit
          echo "commentString=$(git log --pretty=format:%s -1 --abbrev-commit)" >> $GITHUB_OUTPUT
          echo *************************************************
          echo ${{toJson(steps.checkPullRequest)}}


          echo *************************************************
          echo "pullRequest=${{contains(steps.checkPullRequest.outputs.commentString, 'pull_request')}}" >> $GITHUB_OUTPUT
          echo *************************************************

          echo ${{toJson(steps.checkPullRequest.outputs)}}
          echo *************************************************

          if [[ ${{steps.checkPullRequest.outputs.pullRequest}}==true ]]; 
          then
            echo *************************************************
            echo "pullRequestHash=${{steps.checkPullRequest.outputs.pullRequest}}" >> $GITHUB_OUTPUT
          else
            echo *************************************************
            echo "pullRequestHash='This is not pull request'" >> $GITHUB_OUTPUT
          fi

      - id: set-date
        name: should Return Date
        shell: bash
        run: echo "currentDate=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Check Output
        run: |
          echo ${{steps.set-date.outputs.currentDate}}
          echo ${{steps.checkPullRequest.outputs.commentString}}
          echo ${{steps.checkPullRequest.outputs.pullRequest}}
          echo ${{steps.checkPullRequest.outputs.pullRequestHash}}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7

      - name: Create a New Checkpoint Branch
        run: |
          git fetch --all --prune
          git pull origin main 

          # Check if the branch exists
          if(steps.checkPullRequest.outputs.pullRequestHash); then
            
            # Check if the branch exists 
            # If it does, push the update
            # If it doesn't, create the branch and push it

            if(git show-ref best-known-good-version-${{steps.set-date.outputs.currentDate}});
            then
              echo "Branch already exists - pushing the update" 
              git checkout best-known-good-version-${{steps.set-date.outputs.currentDate}}
              git push origin best-known-good-version-${{steps.set-date.outputs.currentDate}}
            else
              echo "Branch does not exist - creating the branch"
              git checkout -b best-known-good-version-${{steps.set-date.outputs.currentDate}}
              git push origin best-known-good-version-${{steps.set-date.outputs.currentDate}}
            fi
          else
            echo "This is not a pull request"
          fi

          git checkout main
